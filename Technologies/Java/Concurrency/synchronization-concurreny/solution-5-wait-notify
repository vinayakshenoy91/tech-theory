-  Wait and notify are two methods from object class
- They are invoked ona given object.
- The thread executing the invocation should hold the key of that object.

- Wait and notify cannot be invoked outside a sync block.

- When calling wait, releases the key held by this thread.
- Puts thread in a wait state. Only way to remove it from wait state is call notify.

- Notify releases a thread in wait state and puts it in runnable state.
- This is the only way to release a waiting thread.


Producer-consumer:
--------------------
public synchronized void set(){ 
          while (storage.size()==maxSize){ 
            try { 
              wait(); 
            } catch (InterruptedException e) { 
              e.printStackTrace(); 
            } 
          } 
          storage.offer(new Date()); 
          System.out.printf("Set: %d",storage.size()); 
          notify(); 
        }


    public synchronized void get(){ 
          while (storage.size()==0){ 
            try { 
              wait(); 
            } catch (InterruptedException e) { 
              e.printStackTrace(); 
            } 
          } 
          String element=storage.poll().toString(); 
          System.out.printf("Get: %d: %s\n",storage.size(),element); 
          notify(); 
 
        }