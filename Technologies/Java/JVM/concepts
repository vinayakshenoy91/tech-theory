JVM:
---
- Java has responsibility of :
1) Loading & interpreting bytecode
2) Security
3) Automatic memory management


- JVM is stack based interpreted machine. It uses execution stack of partial results and performs calculations
by operating on the top value of that stack.

- Main.java -> javac -> Main.class [Javacode to bytecode] , JVM itnerprets the bytecode at runtime.

- Just In Time Compilation: Frequent block of code converted to native code.
JVM can profile and optimise your code, the longer you run and hence code runs faster
Compiling bytecode to mchine code is done in a separate thread.
When you check method, check when it is natively compiled, that time it will run faster.

- Two compilers in jvm:
1) C1 -> 1st 3 levels of compilation to native.
2) C2 -> last level of compilation to native. This code is also put in code cache as it is frequently accessed. 



Diff between 32 and 64 bit architecture:
---------------------------------------