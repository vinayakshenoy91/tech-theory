Homedirectory: 
---------------
- /home is created by user
- /home/username is for each user and stores info specific to user.


Shell types:
-------------
- Bourne shell(sh)
- Bourne agsain shell (bash)
- C shell( csh)
- Korn shell (ksh)
- Z shell (zsh)

echo $SHELL
chsh -> Change shell

Kernel:
--------
- It is an interface between computer process and its hardware.
- Responsible for:
1) Memory managment
2) Process managment
3) Device drivers
4) System calls and security

commands:
---------
uname -r -> display information about kernel, -r shows version
cat /etc/os-release
dmesg | grep -i usb -> used to display detaisl from ring buffer | message generated by kernel
udevadm info --query=path --name=/dev/sdb5 -. query udev db for device info.
udevadm monitor -> Listen to kernel uevents
lspci -> Lists all pci cards like ethernet card
lsblk -> Info about block devices.
sda is a physical disk and sda1 to sda5 are partitions
lscpu -> details about cpu architecture.
lsmem --sumamry -> check exisitng memory 
free -m -> Shows total vs free memory
sudo lshw -> Details entire hardware config of machine.

Total physical cores = cores per socket * number of sockets
Threads = Total physical cores * number of threads

How it works:
------------
USB -> Detected by device driver in kernel -> uevent sent to udev which is a user space -> creates a device node /dev/sdb1


Boot process:
-------------
BIOS POST(power on self test) -> BOOT loader(Load kernel into memory)(GRUB2) -> 
kernel initialization(decompress kernel + load into memeory to start executing) carries out memory mgmt + other driver initialization task
-> looks for INIT process (sets user space + runs other process) -> calls systemd daemon and brings linux host to a usable state

ls -l /sbin/init -> Check if a machine is systemd initated[Check if systemd initiated]

Open machine in GUI or CLI mode ->  machine will be set to certain run level

systemctl get-default -> look at file ls -ltr /etc/systemd/system/default.target [Default systemd target]
systemctl set-default multi-user.target -> setting a multiuser target (cli)
systemctl set-default graphical.target -> setting a gui


Package managers:
------------------
- .RPM -> RHEL, Centos, Fedora
- .DEB -> Ubuntu, Debian, Linux mint

Package manager stake into account: 
1) Package integrity and auth
2) Simplified package mgmt
3) Grouping packages

APT
APT-get
YUM
DNF

RPM installations: [Doesnt resolve package dependnecies]
------------------
- rpm -ivh telnet.rpm [Install]
- rpm -e telnet.rpm [Uninstall]
- rpm -Uvh telnet.rpm [Upgrade]
- rpm -q telnet.rpm [Query]
- rpm -Vf <path to file> [Verify]

So use YUM for higher level package resolution:
-----------------------------------------------
- /etc/yum.repos.d/nginx.repo [Create your own repo and point it to 3rd party]
- yum install httpd
- yum repolist [Check how many repo configured]
- yum remove httpd
- yum update telnet
- yum update
- sudo yum provides tcpdump [package provides the tcpdump command]

DPKG utility: [Similar to PRM is low level][used for linux mint, debian, pure os]
-------------
dpkg -i telnet.deb -> Install
dpkg -r telnet.deb -> uninstall
dpkg -l telnet.deb -> List things
dpkg -s telnet -> get status
dpkg -p <path to file> -> package info or verify

Package manager : APT
/etc/apt/sources.list
apt update
apt upgrade
apt edit-sources
apt install telnet
apt remove telnet
apt search telnet
apt list | grep xyz


Log head:
---------
- head -n 290 your-application.jar.
