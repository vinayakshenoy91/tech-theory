- authentication and authorization configured by default with Spring Security works.
- https://tools.ietf.org/html/rfc7617



IF SSL cert available use it in server:  [application.properties]
--------------------------------------- 
server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:certificate.p12
server.ssl.key-store-password=12345 


Hit endpoint with a username and pwd:
-------------------------------------
- Once we add this dependency, each time a pwd is generated in app console and 
we need to provide username and pwd.

- pwd is a UUID and is generated when spring context is loaded

curl -u user:93a01cf0-794b-4b98-86ef-54860f36f7f3 http://localhost:8080/hello

- Behind the scenes, cURL encodes the string <username>:<password> 
in Base64 and sends it as the value of the Authorization header prefixed with the string Basic. And with cURL,

echo -n user:93a01cf0-794b-4b98-86ef-54860f36f7f3 | base64 //Base64 conversion

curl -H "Authorization: Basic dXNlcjo5M2EwMWNmMC03OTRiLTRiOTgtODZlZi01NDg2MGYzNmY3ZjM="      localhost:8080/hello


Password encoder:
And then we have the PasswordEncoder. The PasswordEncoder does two things:

Encodes a password
Verifies if the password matches an existing encoding

