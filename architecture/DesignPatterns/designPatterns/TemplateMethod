Defn:
----
The Template Method is a pattern intended to help us generalize a common process, at an abstract level, from a set of different procedures. 

Define the skeleton of an algorithm in an operation, deferring some steps to subclasses. Redefine the steps in an algorithm without changing the algorithm’s structure.

although there are different methods for connecting and querying Oracle databases and SQL Server databases, they share the same conceptual process. The Template Method pattern gives us a way to capture this common ground in an abstract class while encapsulating the differences in derived classes. The Template Method pattern is about controlling a sequence common to different processes.

Notes:
-----
In Template Method, base-class code calls an overridable placeholder method, the real implementation of which is supplied by the derived class. The base-class version may be abstract, or it may actually implement a reasonable default operation that the derived class will customize.





What has to be done?
---------------------
- To actually implement this takes filling in several details. 
First of all, the steps in the derived classes need to be declared as abstract and/or protected methods in the base class.

- Second, there may have been local method variables used between the steps. These either need to be passed in and returned or made as data members of the class. 
Those common to both steps should be put in the base class.


The Template Method Pattern: Key Features

Intent

Define the skeleton of an algorithm in an operation, deferring some steps to subclasses. Redefine the steps in an algorithm without changing the algorithm’s structure.

Problem

There is a procedure or set of steps to follow that is consistent at one level of detail, but individual steps may have different implementations at a lower level of detail.

Solution

Allows for definition of substeps that vary while maintaining a consistent basic process.

Participants and collaborators

The Template Method consists of an abstract class that defines the basic TemplateMethod (see figure below) classes that need to be overridden. Each concrete class derived from the abstract class implements a new method for the Template.

Consequences

Templates provide a good platform for code reuse. They also are helpful in ensuring the required steps are implemented. They bind the overridden steps together for each Concrete class, and so should only be used when these variations always and only occur together.

Implementation

Create an abstract class that implements a procedure using abstract methods. These abstract methods must be implemented in subclasses to perform each step of the procedure. If the steps vary independently, each step may be implemented with a Strategy pattern.




public abstract class Aircraft{


   public  final void takeoff(){
       this.checkSystems();
       this.getClearence();
       this.implementCustomActions();
   }

   protected abstract void checkSystems();

   protected abstract void getClearance();

   protected abstract void implementCustomActions();



}