# Managed by CloudFormation:
- VPC configurations
- Security groups
- Load balancers
- Deployment pipelines
- IAM roles

# Managed Elsewhere:
- DynamoDB tables
- Kinesis streams
- Autoscale settings
- S3 buckets


#Reference script:

#!/bin/bash

STACK_NAME=awsbootstrap 
REGION=us-east-1 
CLI_PROFILE=awsbootstrap

EC2_INSTANCE_TYPE=t2.micro 

AWS_ACCOUNT_ID=`aws sts get-caller-identity --profile awsbootstrap \
  --query "Account" --output text`
CODEPIPELINE_BUCKET="$STACK_NAME-$REGION-codepipeline-$AWS_ACCOUNT_ID" 

# Deploy the CloudFormation template
echo -e "\n\n=========== Deploying main.yml ==========="
aws cloudformation deploy \
  --region $REGION \
  --profile $CLI_PROFILE \
  --stack-name $STACK_NAME \
  --template-file main.yml \
  --no-fail-on-empty-changeset \
  --capabilities CAPABILITY_NAMED_IAM \
  --parameter-overrides \ 
    EC2InstanceType=$EC2_INSTANCE_TYPE \
    GitHubOwner=$GH_OWNER \
    GitHubRepo=$GH_REPO \
    GitHubBranch=$GH_BRANCH \
    GitHubPersonalAccessToken=$GH_ACCESS_TOKEN \
    CodePipelineBucket=$CODEPIPELINE_BUCKET
    
    
 aws cloudformation deploy \
  --region $REGION \
  --profile $CLI_PROFILE \
  --stack-name $STACK_NAME-setup \
  --template-file code-pipelie-s3-deploy.yml \
  --no-fail-on-empty-changeset \
  --capabilities CAPABILITY_NAMED_IAM \
  --parameter-overrides \
    CodePipelineBucket=$CODEPIPELINE_BUCKET
    
# If the deploy succeeded, show the DNS name of the created instance
if [ $? -eq 0 ]; then
  aws cloudformation list-exports \
    --profile awsbootstrap \
    --query "Exports[?Name=='InstanceEndpoint'].Value" 
fi


# Creating cloud formation stack:

1) Parameters:
These are the input parameters for the template. They give us the flexibility to change some settings without having to modify the template code.


2) Resources:
This is the bulk of the template. Here is where we define and configure the resources that CloudFormation will manage for us.


3) Outputs:
These are like return values for the template. We use them to make it easy to find some of the resources that CloudFormation will create for us.







