- First in First Out.
- The elements are inserted from the back and removed from the front.

Applications:
-------------
Most operating systems also perform operations based on a Priority Queue—a kind of queue that allows operating systems 
to switch between appropriate processes. They are also used to store packets on routers 
in a certain order when a network is congested. Implementing a cache also heavily relies on queues.
We generally use queues in the following situations:

We want to prioritize something over another
A resource is shared between multiple devices (e.g., Web Servers and Control Units)

Working:
---------
Function	Description
enqueue	Inserts element to the end of the queue
dequeue	Removes an element from the start of the queue
top	Returns the first element of the queue
isEmpty	Checks if the queue is empty
isFull	Checks if the queue is full

Types of Queues #
------------------
There are three common types of queues which cover a wide range of problems:

- Linear Queue
- Circular Queue -Initially, the front and rear parts of the queue point to the same location and eventually move apart as more elements are inserted into the queue. Circular queues are generally used in the following ways:

Simulation of objects
Event handling (do something when a particular event occurs)

- Priority Queue: In Priority Queues, elements are sorted in a specific order. Based on that order, the 
most prioritized object appears at the front of the queue, the least prioritized object appears at the end, and so on. 
These queues are widely used in an operating system to determine which programs should be given more priority.


Impl:
----

Queues are implemented in many ways. They can be represented by using an array, a linked list, or even a stack. 
That being said, an array is most commonly used because it’s the easiest way to implement Queues